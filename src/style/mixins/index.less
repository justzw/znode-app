@import '../themes/index';

// Px to rem
.px2remWrapper () {
  @function: ~`(function(ueWidth) {
    this.px2rem = function (px) {
      return px / ueWidth * 10 + 'rem'
    }
  })('@{ue-width}')`
}
.px2remWrapper();

// Reset component style
.reset-component {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-size: @font-size;
  line-height: @line-height;
  color: @text-color;
}

// Set width and height
.size (@width; @height) when (ispercentage(@width)) and (ispercentage(@height)) {
  width: @width;
  height: @height;
}
.size (@width; @height) when (ispercentage(@width)) and (isnumber(@height)) {
  width: @width;
  height: ~`px2rem('@{height}')`;
}
.size (@width; @height) when (isnumber(@width)) and (ispercentage(@height)) {
  width: ~`px2rem('@{width}')`;
  height: @height;
}
.size (@width; @height) when (isnumber(@width)) and (isnumber(@height)) {
  width: ~`px2rem('@{width}')`;
  height: ~`px2rem('@{height}')`;
}

.square (@size) {
  .size(@size; @size);
}

// Control text lines
.line-limit (@num) {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: @num;
  overflow: hidden;
}

// Placeholder text compatibility
.placeholder (@color: @input-placeholder-color) {
  // Firefox
  &::-moz-placeholder {
    color: @color;
    opacity: 1;
  }
  // IE10+
  &:-ms-input-placeholder {
    color: @color;
  }
  // Safari and Chrome
  &::-webkit-input-placeholder {
    color: @color;
  }
}

